[tool.poetry]
name = "pjrpc"
version = "1.8.1"
description = "Extensible JSON-RPC library"
authors = ["Dmitry Pershin <dapper1291@gmail.com>"]
license = "Unlicense"
readme = "README.rst"
homepage = "https://github.com/dapper91/pjrpc"
repository = "https://github.com/dapper91/pjrpc"
documentation = "https://pjrpc.readthedocs.io"
keywords = [
    'json-rpc', 'rpc', 'jsonrpc-client', 'jsonrpc-server',
    'requests', 'aiohttp', 'flask', 'httpx', 'aio-pika', 'kombu',
    'openapi', 'openrpc', 'starlette', 'django',
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: Public Domain",
    "Framework :: AsyncIO",
    "Framework :: Django",
    "Framework :: Flask",
    "Framework :: Pytest",
    "Typing :: Typed",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]


[tool.poetry.dependencies]
python = ">=3.8,<4.0"
aio-pika = { version = ">=8.0", optional = true }
aiofiles = { version = ">=0.7", optional = true }
aiohttp = { version = ">=3.7", optional = true }
django = { version = ">=3.0", optional = true }
docstring-parser = { version = ">=0.8", optional = true }
flask = { version = ">=1.1.3", optional = true }
httpx = { version = ">=0.23.0", optional = true }
jsonschema = {version = ">=3.0,<4.0", optional = true}
kombu = { version = ">=5.1", optional = true }
markupsafe = { version = "==2.0.1", optional = true }
openapi-ui-bundles = { version = ">=0.1", optional = true }
pydantic = {version = ">=2.0", optional = true}
requests = { version = ">=2.0", optional = true }
starlette = { version = ">=0.25.0", optional = true }
werkzeug = { version = ">=2.0", optional = true}

furo = {version = "^2022.12.7", optional = true}
Sphinx = {version = "^5.3.0", optional = true}
sphinx-copybutton = {version = "^0.5.1", optional = true}
sphinx_design = {version = "^0.3.0", optional = true}
toml = {version = "^0.10.2", optional = true}


[tool.poetry.extras]
aio-pika = ['aio-pika']
aiohttp = ['aiohttp']
django = ['django']
docstring-parser = ['docstring-parser']
flask = ['flask', 'markupsafe']
httpx = ['httpx']
jsonschema = ['jsonschema']
kombu = ['kombu']
openapi-ui-bundles = ['openapi-ui-bundles']
pydantic = ['pydantic']
requests = ['requests']
starlette = ['starlette', 'aiofiles']
test = ['docstring-parser', 'flask', 'jsonschema', 'openapi-ui-bundles', 'pydantic', 'werkzeug']
werkzeug = ['werkzeug']
docs = [
    'sphinx', 'sphinx-copybutton', 'sphinx_design', 'furo', 'toml',
    'aiohttp', 'aio-pika', 'flask', 'jsonschema', 'pydantic', 'requests', 'kombu'
]

[tool.poetry.group.dev.dependencies]
aioresponses = "^0.7.4"
asynctest = "^0.13.0"
codecov = "^2.1.13"
pytest = "^7.4.0"
pytest-aiohttp = "^1.0.4"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
responses = "^0.23.3"
respx = "^0.20.2"
mypy = "^1.7.1"
pre-commit = "~3.2.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
allow_redefinition = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_unused_ignores = true


[[tool.mypy.overrides]]
module = "aio_pika.*"
ignore_missing_imports = true
