[tool.poetry]
name = "pjrpc"
version = "2.0.0"
description = "Extensible JSON-RPC library"
authors = ["Dmitry Pershin <dapper1291@gmail.com>"]
license = "Unlicense"
readme = "README.rst"
homepage = "https://github.com/dapper91/pjrpc"
repository = "https://github.com/dapper91/pjrpc"
documentation = "https://pjrpc.readthedocs.io"
keywords = ['json-rpc', 'jsonrpc-client', 'jsonrpc-server', 'openapi', 'openrpc']
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: Public Domain",
    "Framework :: AsyncIO",
    "Framework :: Flask",
    "Framework :: Pytest",
    "Typing :: Typed",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]


[tool.poetry.dependencies]
python = ">=3.11,<4.0"
aio-pika = { version = ">=8.0", optional = true }
aiohttp = { version = ">=3.7", optional = true }
flask = { version = ">=2.0.0", optional = true }
httpx = { version = ">=0.23.0", optional = true }
openapi-ui-bundles = { version = ">=0.1", optional = true }
pydantic = {version = ">=1.10.20", optional = true}
requests = { version = ">=2.0", optional = true }
werkzeug = { version = ">=2.0", optional = true}


[tool.poetry.extras]
aio-pika = ['aio-pika']
aiohttp = ['aiohttp']
flask = ['flask']
httpx = ['httpx']
openapi-ui-bundles = ['openapi-ui-bundles']
pydantic = ['pydantic']
requests = ['requests']
werkzeug = ['werkzeug']


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
furo = "^2022.12.7"
Sphinx = "^5.3.0"
sphinx-copybutton = "^0.5.1"
sphinx_design = "^0.3.0"
toml = "^0.10.2"
standard-imghdr = "^3.13.0"


[tool.poetry.group.dev.dependencies]
codecov = "^2.1.13"
mypy = "^1.15.0"
pre-commit = "~3.2.0"
aioresponses = "^0.7.4"
asynctest = "^0.13.0"
deepdiff = "^8.0.1"
pytest = "^7.4.0"
pytest-aiohttp = "^1.0.4"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
responses = "^0.23.3"
respx = "^0.22.0"
types-requests = "^2.32.0.20241016"
jsonschema = "^4.25.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
allow_redefinition = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_unused_ignores = true
